# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "devops-test"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
     config.vm.network :forwarded_port, guest: 80, host: 8080    # Apache HTTP
     config.vm.network :forwarded_port, guest: 443, host: 8443   # Apache HTTPS
     config.vm.network :forwarded_port, guest: 5000, host: 5000  # Flask debug server

   config.vm.provision "shell", inline: <<-SHELL
     apt-get update
     apt-get install -y apache2
     sudo su root
     echo "ServerName loclhost:80" >> /etc/apache2/apache2.conf
     sudo su vagrant
     sudo ufw enable
     sudo ufw allow 'Apache Full'
     sudo ufw allow -y 'OpenSSH'
     sudo apt-get install -y systemd
     source /etc/apache2/envvars 
     apache2 -V
     sudo mkdir /var/www/localhost
     sudo chown -R $USER:$USER /var/www/localhost
     sudo chmod -R 755 /var/www/localhost
     sudo cp /vagrant/files/index.html /var/www/localhost/index.html
     sudo cp /vagrant/files/localhost.conf /etc/apache2/sites-available/localhost.conf
     sudo a2ensite localhost.conf
     sudo a2dissite 000-default.conf
     sudo apt-get install apache2 -y openssl
     sudo a2enmod rewrite
     sudo a2enmod ssl
     sudo cp /vagrant/files/other/localhost.conf /etc/apache2/sites-available/localhost.conf
     sudo /etc/init.d/apache2 restart
     sudo apt-get install memcached
     sudo cp /vagrant/files/per_minute /etc/cron.d/per_minute
     sudo cp /vagrant/files/other/per_minute /var/spool/cron/per_minute
     
   SHELL
     
     
end
